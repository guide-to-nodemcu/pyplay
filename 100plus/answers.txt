1.


for i in range(2000,3201):
    if(i%7==0):
        if(i%5==0):
            continue
        else:
            print(i+",",end="")


2.

def fact():
    if(x==0):
        return x
    else:
        return x * fact(x -1)
x = input("enter a number: ")
print(fact(x))

3.

''' # my solution
get = input("Enter a number: ")
dict ={}

for i in range(1,int(get)+1):
    dict[i] = i*i

print(dict)

'''

4.

get = input("Enter values seperated by a comma: ")

List =get.split(',')
Tuple = tuple(List)

print(List)
print(Tuple)

5.

class Stringer(object):
    def __init__self(self):
        self.s = ""
    
    def getInput(self):
        self.s = input("Enter string: ")
    
    def putOutput(self):
        print("Your string was: ",self.s)

strg = Stringer()

strg.getInput()
strg.putOutput()

6.

import math

D = input("Enter D in formula 'Q = Square root of [(2 * C * D)/H]' : ").split(',')

C, H = 50,30
print("C is {} and H is {}".format(str(C),str(H) ))

Q = []
for i in D:
    q = (2 * C * int(i))/ H
    Q.append(str(math.floor(pow(q,0.5))))
print(",".join(Q))

7.

X = int(input("Enter X : "))
Y = int(input("Enter Y : "))

iarr = []
for i in range (0, X):
    jarr = []
    for j in range (0, Y):
        jarr.append( i * j )
    iarr.append(jarr)

print(iarr)

suggested:

get = input("Enter input: ").split(',')

X = int(get[0])
Y = int(get[1])

# multiList = [[0 for j in range(Y)] for i in range(X)]

print(multiList)

for i in range(X):
    for j in range(Y):
        multiList[i][j] = i*j

print(multiList)

8.

# wrong

get = input("input words: ").split(',')

print(get)

wordValue = []

for i in range (0,len(get)):
    min = i
    for j in range(0,len(get)):
        for k in range(0,len(get[min])):
            if(ord(get[min][k]) > ord(get[j][k])):
                print(k)
                min = j
                break
        
        print("executed")
        temp = get[i]
        get[i] = get[min]
        get[min] =temp
    
    

print(",".join(get))

# right   

get = input("Enter the words: ").split(",")

get.sort()

print(",".join(get))

9.

import sys
print("Enter lines : ")
userInput = sys.stdin.readlines()

#print(userInput)

oline = ""

for word in userInput:
    oword = ""
    for char in word:
        #print("char: ", char)

        if(ord(char) in range(97,123) ):
            char  = chr(ord(char)-32)
            #print("char changes: ", chr(ord(char) -32))
            
        oword += char
    oline += oword 

print(oline)

10.

# without using sorted

get  =  input ("Enter your words seperated by space : ").split(" ")

get = list(set(get))

scoreList = {}
index = 0

for word in get:
    
    score = 0
    index_score = 10000000000
    
    for ch in word:
        score += index_score * ord(ch)
        index_score /= 10
    
    scoreList[word] = [score, index]
    index += 1

import operator 

sorted_list = sorted(scoreList.items(), key= operator.itemgetter(0))

for i in sorted_list:
    print(i[0], end=" ")


# suggested answer

print(" ".join(sorted(list(set(input ("Enter you input : ").split(" "))))))

11.

get = input("Enter  number sequence: ").split(',')

out = []
for i in get:
    if(int(i)%5 == 0):
        out.append(i)

print(",".join(out))

12.

import math
iter = []
for i in range (1000,30001):
    c = i
    flag = True
    while(c>1):
        if((c%10)%2 != 0):
            flag = False
        c = math.floor(c/10)
        

    if(flag):
        iter.append(str(i))

print(",".join(iter))

13.

get = input("Enter the phrase :")

letters = 0
numbers = 0

for i in get:

    # if (i in (range(ord('a'), ord('z')) or range(ord('A'), ord():
    #     letter += 1
    # elif(i in range(0,10)):
    #     numbers += 1

    if(i.isalpha()):
        letters += 1
    elif(i.isnumeric()):
        numbers += 1

print("LETTERS ", letters)
#("NUMBERS ", numbers)

14.

get = input( "Enter thre phrase: " )

upper = 0
lower = 0

for i in get :
    if(i.isupper()):
        upper += 1
    elif(i.islower()):
        lower += 1

print("UPPER ", upper)
print("LOWER ", lower)

15.

get = int(input("Enter a number : "))

print(get + get * 10 + get + get * 100 + get * 10 + get + get * 1000 + get * 100 + get * 10 + get)

16.

get = input("Enter the number list: ").split(',')

out = [str(int(x)*int(x)) for x in get if (int(x)%2 != 0)]

print(",".join(out))

17.

import sys

get = sys.stdin.readlines()

money = 0

for i in range(len(get)):
    tokens = get[i].split()
    if (tokens[0] == 'd'):
        money += int(tokens[1])
    elif (tokens[0] == 'w'):
        money -= int(tokens[1])
    else :
        print("improper format given", " ".join(get[i]))

print(money

18.

get = input("Enter the passwords: ").split(',')

goodpass = []
for i in get :
    passed = 0
    if (len(i) > 5 & len(i) < 13):
        for j in i:
            if(j.isupper()):
                passed += 1
            if(j.islower()):
                passed += 1
            if(j.isnumeric()):
                passed += 1
            if(j in ['$','#','@']):
                passed += 1
    if(passed > 3):
        goodpass.append(i)

print(",".join(goodpass))

19.

import sys

get= sys.stdin.readlines()

sortScoreList = []

for line in get :
    totalscore = 0
    
    name,age,score = line.strip().split(',')
    #print(name,age,score)

    d = 1
    for char in name:
        totalscore += ord(char) * 100000/d
        d = d * 10

    totalscore += int(age) + int(score)
    sortScoreList.append(totalscore)


#print(sortScoreList)


sortIndex = []
for i in range(len(sortScoreList)):
    min = 0

    for j in range(len(sortScoreList)):
        print(min,j)
        if (sortScoreList[min] > sortScoreList[j]):
            
            min = j
    sortIndex.append(min)
    sortScoreList[min] = 1000000000000000000
    #print(sortScoreList, sortIndex)

#print(sortIndex)


for i in sortIndex:
    print((get[i].strip()))

20.

get = input("Input range : ").split(',')

for i in range(int(get[0]), int(get[1])):
    if(i%7 == 0):
        print(i)

21. 

import sys
import math

get = sys.stdin.readlines()

x = 0
y = 0

for action in get:
    direction = action.strip('\n').split(' ')[0].lower()
    steps = action.strip('\n').split(' ')[1]

    if (direction == 'up'):
        y -= int(steps)
    elif (direction == 'down'):
        y += int(steps)
    elif (direction == 'left'):
        x -= int(steps)
    elif(direction == 'right'):
        x += int(steps)
    else:
        pass


print(math.floor(math.sqrt(x**2 + y**2)))







    




